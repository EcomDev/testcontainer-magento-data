name: Build Docker Image Based on Provided Data Artifact
description: Generates single database version per Magento release for both MariaDB and MySQL
author: Ivan Chepurnyi <ivan@ecom.dev>
inputs:
  artifact:
    required: true
    description: Name of artifact to build image from
  containerType:
    description: Container Type
    required: true
  registry:
    description: Container registry
    default: ghcr.io
  username:
    description: Container registry username
  password:
    description: Container registry password
  imageName:
    description: Image name
    required: true
  imageTags:
    description: Image Tags
    required: true
  push:
    default: 'false'
    description: Push Images to repository
  version:
    required: true
    description: Base version of image to use
runs:
  using: composite
  steps:
    - name: Create artifact directory
      run: mkdir -p artifact/
      shell: bash

    - name: Download artifact
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
      with:
        github-token: ${{ inputs.password }}
        path: artifact/
        name: ${{ inputs.artifact }}

    - name: Unpack search directory
      run: |
        cd artifact
        tar xzvf search.tgz
      shell: bash

    - name: Set up QEMU
      uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5

    - name: Log into registry ${{ inputs.registry }}
      if: inputs.push != 'false'
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96
      with:
        images: ${{ inputs.registry }}/${{ inputs.imageName }}
        tags: ${{ inputs.imageTags }}

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355
      with:
        context: artifact/
        file: ${{ github.action_path  }}/Dockerfile-${{ inputs.containerType }}
        push: ${{ inputs.push != 'false' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: SOURCE_VERSION=${{ inputs.version }}
    - name: Generate artifact attestation
      if: ${{ inputs.push != 'false' }}
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: ${{ inputs.registry }}/${{ inputs.imageName }}
        subject-digest: ${{ steps.build-and-push.outputs.digest }}
        push-to-registry: ${{ inputs.push != 'false' }}
